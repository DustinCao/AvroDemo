/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.infobird.entity;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class LabelEntity extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"LabelEntity\",\"namespace\":\"com.infobird.entity\",\"fields\":[{\"name\":\"labelMap\",\"type\":{\"type\":\"map\",\"values\":\"string\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> labelMap;

  /**
   * Default constructor.
   */
  public LabelEntity() {}

  /**
   * All-args constructor.
   */
  public LabelEntity(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> labelMap) {
    this.labelMap = labelMap;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return labelMap;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: labelMap = (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'labelMap' field.
   */
  public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getLabelMap() {
    return labelMap;
  }

  /**
   * Sets the value of the 'labelMap' field.
   * @param value the value to set.
   */
  public void setLabelMap(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
    this.labelMap = value;
  }

  /** Creates a new LabelEntity RecordBuilder */
  public static com.infobird.entity.LabelEntity.Builder newBuilder() {
    return new com.infobird.entity.LabelEntity.Builder();
  }
  
  /** Creates a new LabelEntity RecordBuilder by copying an existing Builder */
  public static com.infobird.entity.LabelEntity.Builder newBuilder(com.infobird.entity.LabelEntity.Builder other) {
    return new com.infobird.entity.LabelEntity.Builder(other);
  }
  
  /** Creates a new LabelEntity RecordBuilder by copying an existing LabelEntity instance */
  public static com.infobird.entity.LabelEntity.Builder newBuilder(com.infobird.entity.LabelEntity other) {
    return new com.infobird.entity.LabelEntity.Builder(other);
  }
  
  /**
   * RecordBuilder for LabelEntity instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<LabelEntity>
    implements org.apache.avro.data.RecordBuilder<LabelEntity> {

    private java.util.Map<java.lang.CharSequence,java.lang.CharSequence> labelMap;

    /** Creates a new Builder */
    private Builder() {
      super(com.infobird.entity.LabelEntity.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.infobird.entity.LabelEntity.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing LabelEntity instance */
    private Builder(com.infobird.entity.LabelEntity other) {
            super(com.infobird.entity.LabelEntity.SCHEMA$);
      if (isValidValue(fields()[0], other.labelMap)) {
        this.labelMap = data().deepCopy(fields()[0].schema(), other.labelMap);
        fieldSetFlags()[0] = true;
      }
    }

    /** Gets the value of the 'labelMap' field */
    public java.util.Map<java.lang.CharSequence,java.lang.CharSequence> getLabelMap() {
      return labelMap;
    }
    
    /** Sets the value of the 'labelMap' field */
    public com.infobird.entity.LabelEntity.Builder setLabelMap(java.util.Map<java.lang.CharSequence,java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.labelMap = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'labelMap' field has been set */
    public boolean hasLabelMap() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'labelMap' field */
    public com.infobird.entity.LabelEntity.Builder clearLabelMap() {
      labelMap = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    @Override
    public LabelEntity build() {
      try {
        LabelEntity record = new LabelEntity();
        record.labelMap = fieldSetFlags()[0] ? this.labelMap : (java.util.Map<java.lang.CharSequence,java.lang.CharSequence>) defaultValue(fields()[0]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
